# cargo
variables:
  CARGO_HOME: $CI_PROJECT_DIR/.cargo
  APT_CACHE_DIR: $CI_PROJECT_DIR/apt
#   PIP_CACHE_DIR: $CI_PROJECT_DIR/.cache/pip
#   PIP_CACHE_DIR: "$CI_PROJECT_DIR/pip-cache"
#   GIT_CLONE_PATH: $CI_BUILDS_DIR/project-name

cache:
  paths:
    - "$CI_PROJECT_DIR/pip-cache"
  key: "$CI_PROJECT_ID"

before_script:
  - apt-get update -yq
  - apt-get install -o dir::cache::archives="$APT_CACHE_DIR" -y {{ DEPENDENCIES }}


  cache:
    paths:
      - .cargo

cache:
    key: "$CI_JOB_NAME"
    untracked: true
    paths:
    - $HOME/.cargo/
    - target/

# Define a yaml template for running a build and then running your tests
.cargo_test_template: &cargo_test
  script:
  - rustc --version && cargo --version
  - cargo build
  - cargo test --verbose

# Set any required environment variables here
variables:
  RUST_BACKTRACE: "FULL"

# Do any pre-flight requirements here, such as updating $PATH installing dependencies
before_script:
  - export PATH="/root/.cargo/bin:$PATH"