.linter:base:
  stage: lint
  allow_failure: true
  interruptible: true

yamllint:
  extends: .linter:base
  image: sdesbure/yamllint
  before_script:
    - yamllint --version
  script:
    - yamllint .
  rules:
    - if: '$DEBUG_PIPELINE'
      when: never
    - changes:
      - "**/*/*.yaml"
      - "**/*/*.yml"
      when: always
    - exists:
      - "**/*/*.yaml"
      - "**/*/*.yml"
      when: manual
    - when: never

.markdownlint:
  extends: .linter:base
  stage: lint
  image:
    name: ruby:alpine
    entrypoint: [""]
  before_script:
    - gem install mdl
    - mdl --version
  script:
    - mdl --style all --warnings .
  rules:
    - if: '$DEBUG_PIPELINE'
      when: never
    - changes:
      - "**/*/*.md"
      when: manual
    - exists:
      - "**/*/*.md"
      when: manual
    - when: never

.jsonlint:
  extends: .linter:base
  image: sahsu/docker-jsonlint
  before_script:
    - jsonlint --version || true
  script:
    - |
      for file in $(find . -type f -name "*.json"); do
        if ! jsonlint -q $file; then
          export FAILED=1
        else
          echo "$file OK"
        fi
      done
      if [ "${FAILED}" = "1" ]; then
        exit 1
      fi
  rules:
    - if: '$DEBUG_PIPELINE'
      when: never
    - changes:
      - "**/*.json"
      when: always
    - exists:
      - "**/*.json"
      when: manual
    - when: never

.shellcheck:
  extends: .linter:base
  image:
    name: koalaman/shellcheck-alpine:stable
    entrypoint: [""]
  before_script:
    - shellcheck --version
    - apk --no-cache add grep
  script:
    - |
      for file in $(grep -IRl "#\!\(/usr/bin/env \|/bin/\)" --exclude-dir ".git,custom_components" .); do
        if ! shellcheck -x $file; then
          export FAILED=1
        else
          echo "$file OK"
        fi
      done
      if [ "${FAILED}" = "1" ]; then
        exit 1
      fi
  rules:
    - if: '$DEBUG_PIPELINE'
      when: never
    - changes:
      - "**/*/*.sh"
      when: always
    - exists:
      - "**/*/*.sh"
      when: manual
    - when: never

.lint-ansible:
  extends: .linter:base
  image: sdesbure/ansible-lint
  script:
    - ansible-lint playbooks/*.yml
  rules:
    - if: '$DEBUG_PIPELINE'
      when: never
    - changes:
      - "**/playbooks/*.yml"
      when: always
    - exists:
      - "**/playbooks/*.yml"
      when: manual
    - when: never


# docker run --rm -v $(pwd):/data -t wata727/tflint