shellcheck:
  stage: lint
  allow_failure: true
  interruptible: true
  image:
    name: donaldrich/function:shellcheck
    entrypoint: [""]
  before_script:
    - shellcheck --version
  script:
    - shellcheck --color=always **/*.sh
    - shellcheck --color=always --format=checkstyle **/*.sh
    - shellcheck --color=always --format=diff **/*.sh
    - shellcheck --color=always --format=gcc **/*.sh
    - shellcheck --color=always --format=json **/*.sh
    - shellcheck --color=always --format=json1 **/*.sh
    - shellcheck --color=always --format=quiet **/*.sh
    - shellcheck --color=always --format=tty **/*.sh
  rules:
    - exists:
      - "**/*.sh"
      when: always
    - when: never

# shellcheck:
#   stage: lint
#   allow_failure: true
#   interruptible: true
#   image:
#     name: donaldrich/lint:shellcheck
#   before_script:
#     - shellcheck --version
#   script:
#     - |
#       for file in $(grep -IRl "#\!\(/usr/bin/env \|/bin/\)" --exclude-dir ".git,templates,custom_components" .); do
#         if ! shellcheck -x $file; then
#           export FAILED=1
#         else
#           echo "$file OK"
#         fi
#       done
#       if [ "${FAILED}" = "1" ]; then
#         exit 1
#       fi

# shellcheck-fix:
#   stage: lint
#   allow_failure: true
#   interruptible: true
#   image:
#     name: donaldrich/lint:shellcheck
#   before_script:
#     - shellcheck --version
#   script:
#     - shellcheck -f diff **/*.sh
#   rules:
#     - exists:
#       - "**/*.sh"
#       when: always
#     - when: never

# shellcheck-glob:
#   stage: lint
#   allow_failure: true
#   interruptible: true
#   image:
#     name: koalaman/shellcheck-alpine:stable
#     entrypoint: [""]
#   script:
#     - shellcheck **/*.{sh,bash}
#     - apk --no-cache add grep

# /**/*.{sh,bash}
  # rules:
  #   - if: '$DEBUG_PIPELINE'
  #     when: never
  #   - changes:
  #     - "**/*/*.sh"
  #     when: always
  #   - exists:
  #     - "**/*/*.sh"
  #     when: manual
  #   - when: never