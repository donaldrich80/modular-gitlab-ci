.ssh-provision: &ssh-provision
  - export VAULT_ADDR=$VAULT_ADDR
  # - export VAULT_TOKEN=$VAULT_TOKEN
  - export VAULT_TOKEN="$(vault write -field=token auth/$JWT_PATH/login role=vault-reader jwt=$CI_JOB_JWT)"
  - export SECRET_REPO="$(vault kv get -field=SECRET_REPO /kv/gitlab-ci/global)"
  - export SSH_LOGIN_COMMAND="$(vault kv get -field=$CI_PROJECT_NAME /kv/gitlab-ci/ssh-login-command)"
  - export PROJECT_FOLDER="$(vault kv get -field=$CI_PROJECT_NAME /kv/gitlab-ci/project-folder)"
  - git clone https://gitlab-ci-token:${CI_JOB_TOKEN}@$SECRET_REPO ~/secrets
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh
  - cp -r ~/secrets/ssh/. ~/.ssh
  - chmod 0600 -R ~/.ssh
  - chmod 700 ~/.ssh
  - eval $(ssh-agent -s)
  # - echo "$SSH_PRIVATE_KEY" | ssh-add - > /dev/null
  - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'

.ssh-runner:
  image:
    # name: $CI_REGISTRY/$CI_PROJECT_NAMESPACE/secrets/private/docker-runner:latest
    name: donaldrich/runner:latest
    entrypoint: [""]
  variables:
    GIT_STRATEGY: none
    SSH_LOGIN_COMMAND: "ssh $SSH_USER@$SSH_ADDRESS -p $SSH_PORT"
  before_script:
    - *ssh-provision
  after_script:
    - rm -r ~/secrets
    - rm -r ~/.ssh
