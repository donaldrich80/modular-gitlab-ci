fetch-semantic-version:
  image:
    name: donaldrich/semver:latest
    entrypoint: [""]
  stage: .pre
  only:
    refs:
      - master
    # - alpha
    # - /^(([0-9]+)\.)?([0-9]+)\.x/ # This matches maintenance branches
    # - /^([0-9]+)\.([0-9]+)\.([0-9]+)(?:-([0-9A-Za-z-]+(?:\.[0-9A-Za-z-]+)*))?(?:\+[0-9A-Za-z-]+)?$/ # This matches pre-releases
  script:
    - semantic-release --generate-notes false --dry-run
  artifacts:
    paths:
      - VERSION.txt

generate-non-semantic-version:
  stage: .pre
  except:
    refs:
      - master
      # - alpha
      # - /^(([0-9]+)\.)?([0-9]+)\.x/ # This matches maintenance branches
      # - /^([0-9]+)\.([0-9]+)\.([0-9]+)(?:-([0-9A-Za-z-]+(?:\.[0-9A-Za-z-]+)*))?(?:\+[0-9A-Za-z-]+)?$/ # This matches pre-releases
  script:
    - echo build-$CI_PIPELINE_ID > VERSION.txt
  artifacts:
    paths:
      - VERSION.txt

# build:
#   stage: build
#   script:
#     - echo "Version is $(cat VERSION.txt)"

release:
  image:
    name: donaldrich/semver:latest
    entrypoint: [""]
  stage: deploy
  only:
    refs:
      - master
    # - alpha
    # # This matches maintenance branches
    # - /^(([0-9]+)\.)?([0-9]+)\.x/
    # # This matches pre-releases
    # - /^([0-9]+)\.([0-9]+)\.([0-9]+)(?:-([0-9A-Za-z-]+(?:\.[0-9A-Za-z-]+)*))?(?:\+[0-9A-Za-z-]+)?$/
  script:
    - semantic-release
