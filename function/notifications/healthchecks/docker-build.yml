.healthcheck-docker: &healthcheck-docker
  - export VAULT_ADDR=$VAULT_ADDR
  - export VAULT_TOKEN="$(vault write -field=token auth/$JWT_LOGIN/login role=gitlab-ci-ro jwt=$CI_JOB_JWT)"
  - export HEALTHCHECK_URL="$(vault kv get -field=HEALTHCHECK_URL /kv/gitlab-ci/global)"
  - export HEALTHCHECK_ENDPOINT="$(vault kv get -field=$IMAGE_NAME:$IMAGE_TAG /kv/gitlab-ci/docker-images)"

healthcheck:start:
  image:
    name: donaldrich/runner:latest
    entrypoint: [""]
  stage: .pre
  rules:
    - if: '$DISABLE_HEALTHCHECKS == "true"'
      when: never
    - if: '$DISABLE_HEALTHCHECKS != "true"'
      when: on_success
  variables:
    GIT_STRATEGY: none
  script:
    - *healthcheck-docker
    - curl --retry 3 $HEALTHCHECK_URL/$HEALTHCHECK_ENDPOINT/start

healthcheck:end:
  image:
    name: donaldrich/runner:latest
    entrypoint: [""]
  stage: .post
  variables:
    GIT_STRATEGY: none
  # when: on_success
  rules:
    - if: '$DISABLE_HEALTHCHECKS == "true"'
      when: never
    - if: '$DISABLE_HEALTHCHECKS != "true"'
      when: on_success
  script:
    - *healthcheck-docker
    - curl --retry 3 $HEALTHCHECK_URL/$HEALTHCHECK_ENDPOINT

healthcheck:fail:
  image:
    name: donaldrich/runner:latest
    entrypoint: [""]
  stage: .post
  variables:
    GIT_STRATEGY: none
  rules:
    - if: '$DISABLE_HEALTHCHECKS == "true"'
      when: never
    - if: '$DISABLE_HEALTHCHECKS != "true"'
      when: on_failure
  # when: on_failure
  script:
    - *healthcheck-docker
    - curl --retry 3 $HEALTHCHECK_URL/$HEALTHCHECK_ENDPOINT/fail
